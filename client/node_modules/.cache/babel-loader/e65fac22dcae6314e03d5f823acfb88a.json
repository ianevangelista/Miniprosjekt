{"ast":null,"code":"var _jsxFileName = \"/Users/ianevangelista/OneDrive - NTNU/Dataingeni\\xF8r/2. klasse/1. semester/TDAT2003 Systemutvikling 2 med web-applikasjoner/sysweb/client/src/components/LiveFeed.js\";\nimport React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"../styles/LiveFeed.css\";\nimport { getLiveFeedNews } from \"../Service\";\nexport default class LiveFeed extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      news: [],\n      isLoaded: false,\n      errorMsg: null\n    };\n  }\n\n  componentDidMount() {\n    getLiveFeedNews().then(response => {\n      this.setState({\n        news: response\n      });\n      this.setState({\n        isLoaded: true\n      });\n    }).catch(error => {\n      console.log(error);\n      this.setState({\n        errorMsg: \"Error retreiving data\"\n      });\n    });\n  }\n\n  render() {\n    const _this$state$news = this.state.news,\n          news = _this$state$news.news,\n          isLoaded = _this$state$news.isLoaded,\n          errorMsg = _this$state$news.errorMsg;\n\n    if (errorMsg) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, errorMsg.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"marquee\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bg-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"SISTE NYTT\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), getCurrentDate()), React.createElement(\"p\", {\n        className: \"text-uppercase livefeed-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, news.map(news => getLatestNews(news))));\n    }\n  }\n\n}\n\nfunction getLatestNews(news) {\n  return React.createElement(NavLink, {\n    className: \"marquee\",\n    exact: true,\n    to: \"/sak/\" + news.sak_id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"font-weight-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, stringifyDate(news.tidspunkt), \" \", stringifyTime(news.tidspunkt), \" - \"), React.createElement(\"a\", {\n    className: \"mr-5 text-danger font-weight-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \" \", news.overskrift));\n}\n\nfunction stringifyDate(date) {\n  return date.slice(0, 10);\n}\n\nfunction stringifyTime(date) {\n  return date.slice(11, 16);\n}\n\nfunction getCurrentDate(separator = \".\") {\n  let newDate = new Date();\n  let date = newDate.getDate();\n  let month = newDate.getMonth() + 1;\n  let year = newDate.getFullYear();\n  return React.createElement(\"a\", {\n    className: \"text-white mr-5 my-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, date, separator, month < 10 ? \"0{month}\" : \"\".concat(month), separator, year);\n}","map":{"version":3,"sources":["/Users/ianevangelista/OneDrive - NTNU/DataingeniÃ¸r/2. klasse/1. semester/TDAT2003 Systemutvikling 2 med web-applikasjoner/sysweb/client/src/components/LiveFeed.js"],"names":["React","Component","NavLink","getLiveFeedNews","LiveFeed","constructor","props","state","news","isLoaded","errorMsg","componentDidMount","then","response","setState","catch","error","console","log","render","message","getCurrentDate","map","getLatestNews","sak_id","stringifyDate","tidspunkt","stringifyTime","overskrift","date","slice","separator","newDate","Date","getDate","month","getMonth","year","getFullYear"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"../styles/LiveFeed.css\";\nimport { getLiveFeedNews } from \"../Service\";\n\nexport default class LiveFeed extends Component<\n  {},\n  {\n    news: Array<mixed>,\n    isLoaded: boolean,\n    errorMsg: any\n  }\n> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      news: [],\n      isLoaded: false,\n      errorMsg: null\n    };\n  }\n\n  componentDidMount() {\n    getLiveFeedNews()\n      .then((response: any) => {\n        this.setState({ news: response });\n        this.setState({ isLoaded: true });\n      })\n      .catch((error: any) => {\n        console.log(error);\n        this.setState({ errorMsg: \"Error retreiving data\" });\n      });\n  }\n\n  render() {\n    const { news, isLoaded, errorMsg } = this.state.news;\n\n    if (errorMsg) {\n      return <div>{errorMsg.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div className=\"marquee\">\n          <div className=\"bg-dark\">\n            SISTE NYTT\n            <br />\n            {getCurrentDate()}\n          </div>\n          <p className=\"text-uppercase livefeed-text\">\n            {news.map(news => getLatestNews(news))}\n          </p>\n        </div>\n      );\n    }\n  }\n}\n\nfunction getLatestNews(news: {\n  overskrift: string,\n  sak_id: number,\n  tidspunkt: string\n}) {\n  return (\n    <NavLink className=\"marquee\" exact to={\"/sak/\" + news.sak_id}>\n      <a className=\"font-weight-bold\">\n        {stringifyDate(news.tidspunkt)} {stringifyTime(news.tidspunkt)}\n        {\" - \"}\n      </a>\n      <a className=\"mr-5 text-danger font-weight-bold\"> {news.overskrift}</a>\n    </NavLink>\n  );\n}\n\nfunction stringifyDate(date: string) {\n  return date.slice(0, 10);\n}\n\nfunction stringifyTime(date: string) {\n  return date.slice(11, 16);\n}\n\nfunction getCurrentDate(separator: string = \".\") {\n  let newDate = new Date();\n  let date = newDate.getDate();\n  let month = newDate.getMonth() + 1;\n  let year = newDate.getFullYear();\n\n  return (\n    <a className=\"text-white mr-5 my-auto\">\n      {date}\n      {separator}\n      {month < 10 ? `0{month}` : `${month}`}\n      {separator}\n      {year}\n    </a>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}