{"ast":null,"code":"var _jsxFileName = \"/Users/ianevangelista/OneDrive - NTNU/Dataingeni\\xF8r/2. klasse/1. semester/TDAT2003 Systemutvikling 2 med web-applikasjoner/sysweb/client/src/components/ArticleEdit.js\";\nimport React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\nimport \"../styles/Article.css\";\nimport { ButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from \"reactstrap\";\nimport { editNews, getAllCategories } from \"../Service\";\nexport default class ArticleEdit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.editHandler = e => {\n      console.log(this.state.kategori_id);\n      e.preventDefault();\n\n      if (window.confirm(\"Er du sikker?\")) {\n        if (this.required()) {\n          editNews(this.props.articleId, this.state).then(response => {\n            alert(\"Saken er endret\");\n            window.location.hash = \"\";\n          }).catch(error => {\n            console.log(error);\n          });\n        } else alert(\"Vennligst fyll inn alle feltene\");\n      }\n    };\n\n    this.changeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.toggleForm = () => {\n      const showInputForm = this.state.showInputForm.showInputForm;\n      this.setState({\n        showInputForm: !this.state.showInputForm\n      });\n    };\n\n    this.state = {\n      overskrift: this.props.articleTitle,\n      ingress: this.props.ingress,\n      innhold: this.props.articleContent,\n      bilde: this.props.articleImg,\n      kategori_id: this.props.articleCategoryId,\n      viktighet: this.props.articleImportancy,\n      categories: [],\n      showInputForm: false,\n      dropdownOpen: false,\n      dropdownOpenImportancy: false,\n      valueCategory: this.props.articleCategoryId + \". \" + this.props.articleCategory,\n      valueImportancy: this.props.articleImportancy\n    };\n    this.toggleForm = this.toggleForm.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.select = this.select.bind(this);\n    this.toggleImportancy = this.toggleImportancy.bind(this);\n    this.selectImportancy = this.selectImportancy.bind(this);\n    this.required = this.required.bind(this);\n  }\n\n  componentDidMount() {\n    getAllCategories().then(response => {\n      console.log(response);\n      this.setState({\n        categories: response\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  required() {\n    if (this.state.overskrift === \"\" || this.state.ingress === \"\" || this.state.innhold === \"\" || this.state.bilde === \"\" || this.state.kategori_id === \"\" || this.state.viktighet === \"\") {\n      return false;\n    }\n\n    return true;\n  }\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n\n  toggleImportancy() {\n    this.setState({\n      dropdownOpenImportancy: !this.state.dropdownOpenImportancy\n    });\n  }\n\n  select(event) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n      valueCategory: event.target.innerText\n    });\n    this.setState({\n      kategori_id: checkCategory(event.target.innerText)\n    });\n  }\n\n  selectImportancy(event) {\n    this.setState({\n      dropdownOpenImportancy: !this.state.dropdownOpenImportancy,\n      valueImportancy: event.target.innerText\n    });\n    this.setState({\n      viktighet: checkImportancy(event.target.innerText)\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          overskrift = _this$state.overskrift,\n          ingress = _this$state.ingress,\n          innhold = _this$state.innhold,\n          bilde = _this$state.bilde,\n          kategori_id = _this$state.kategori_id,\n          viktighet = _this$state.viktighet,\n          categories = _this$state.categories;\n    return React.createElement(\"div\", {\n      className: \"my-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, this.state.showInputForm && React.createElement(\"form\", {\n      onSubmit: this.editHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Tittel:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"overskrift\",\n      value: overskrift,\n      onChange: this.changeHandler,\n      class: \"form-control\",\n      placeholder: \"Skriv inn tittelen til din sak\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Beskrivelse:\"), React.createElement(\"textarea\", {\n      type: \"text\",\n      name: \"innhold\",\n      class: \"form-control\",\n      value: innhold,\n      onChange: this.changeHandler,\n      placeholder: \"Skriv inn det innholdet du \\xF8nsker vist i saken\",\n      rows: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Bilde-URL:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"bilde\",\n      value: bilde,\n      onChange: this.changeHandler,\n      class: \"form-control\",\n      placeholder: \"Skriv inn bilde-URL til din sak\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Kategori:\"), React.createElement(ButtonDropdown, {\n      className: \"ml-3\",\n      isOpen: this.state.dropdownOpen,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, this.state.valueCategory), React.createElement(DropdownMenu, {\n      onClick: this.select,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, categories.map(category => getCategories(category))))), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Viktighet:\"), React.createElement(ButtonDropdown, {\n      className: \"ml-3\",\n      isOpen: this.state.dropdownOpenImportancy,\n      toggle: this.toggleImportancy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, this.state.valueImportancy), React.createElement(DropdownMenu, {\n      onClick: this.selectImportancy,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(DropdownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"1\"), React.createElement(DropdownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"2\")))), React.createElement(\"button\", {\n      type: \"submit\",\n      class: \"btn btn-primary fa fa-save fa-custom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"fa-custom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \" LAGRE\"))), React.createElement(Button, {\n      className: \"bg-warning fa fa-edit fa-custom\",\n      onClick: this.toggleForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"fa-custom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \" ENDRE SAK\")));\n  }\n\n}\n\nfunction checkCategory(category) {\n  return category.substring(0, 1);\n}\n\nfunction getCategories(category) {\n  return React.createElement(DropdownItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, category.kategori_id, \". \", category.kategori_navn);\n}\n\nfunction checkImportancy(importancy) {\n  if (importancy.length > 1) return null;else return importancy;\n}","map":{"version":3,"sources":["/Users/ianevangelista/OneDrive - NTNU/Dataingeniør/2. klasse/1. semester/TDAT2003 Systemutvikling 2 med web-applikasjoner/sysweb/client/src/components/ArticleEdit.js"],"names":["React","Component","Button","ButtonDropdown","DropdownMenu","DropdownItem","DropdownToggle","editNews","getAllCategories","ArticleEdit","constructor","props","editHandler","e","console","log","state","kategori_id","preventDefault","window","confirm","required","articleId","then","response","alert","location","hash","catch","error","changeHandler","setState","target","name","value","toggleForm","showInputForm","overskrift","articleTitle","ingress","innhold","articleContent","bilde","articleImg","articleCategoryId","viktighet","articleImportancy","categories","dropdownOpen","dropdownOpenImportancy","valueCategory","articleCategory","valueImportancy","bind","toggle","select","toggleImportancy","selectImportancy","componentDidMount","event","innerText","checkCategory","checkImportancy","render","map","category","getCategories","substring","kategori_navn","importancy","length"],"mappings":";AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAO,uBAAP;AACA,SACEC,cADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,cAJF,QAKO,YALP;AAMA,SAASC,QAAT,EAAmBC,gBAAnB,QAA2C,YAA3C;AAEA,eAAe,MAAMC,WAAN,SAA0BR,SAA1B,CASZ;AACDS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAqDnBC,WArDmB,GAqDLC,CAAC,IAAI;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,WAAvB;AAEAJ,MAAAA,CAAC,CAACK,cAAF;;AACA,UAAIC,MAAM,CAACC,OAAP,CAAe,eAAf,CAAJ,EAAqC;AACnC,YAAI,KAAKC,QAAL,EAAJ,EAAqB;AACnBd,UAAAA,QAAQ,CAAC,KAAKI,KAAL,CAAWW,SAAZ,EAAuB,KAAKN,KAA5B,CAAR,CACGO,IADH,CACQC,QAAQ,IAAI;AAChBC,YAAAA,KAAK,CAAC,iBAAD,CAAL;AACAN,YAAAA,MAAM,CAACO,QAAP,CAAgBC,IAAhB,GAAuB,EAAvB;AACD,WAJH,EAKGC,KALH,CAKSC,KAAK,IAAI;AACdf,YAAAA,OAAO,CAACC,GAAR,CAAYc,KAAZ;AACD,WAPH;AAQD,SATD,MASOJ,KAAK,CAAC,iCAAD,CAAL;AACR;AACF,KArEkB;;AAAA,SAuEnBK,aAvEmB,GAuEHjB,CAAC,IAAI;AACnB,WAAKkB,QAAL,CAAc;AAAE,SAAClB,CAAC,CAACmB,MAAF,CAASC,IAAV,GAAiBpB,CAAC,CAACmB,MAAF,CAASE;AAA5B,OAAd;AACD,KAzEkB;;AAAA,SA2EnBC,UA3EmB,GA2EN,MAAM;AAAA,YACTC,aADS,GACS,KAAKpB,KAAL,CAAWoB,aADpB,CACTA,aADS;AAEjB,WAAKL,QAAL,CAAc;AACZK,QAAAA,aAAa,EAAE,CAAC,KAAKpB,KAAL,CAAWoB;AADf,OAAd;AAGD,KAhFkB;;AAGjB,SAAKpB,KAAL,GAAa;AACXqB,MAAAA,UAAU,EAAE,KAAK1B,KAAL,CAAW2B,YADZ;AAEXC,MAAAA,OAAO,EAAE,KAAK5B,KAAL,CAAW4B,OAFT;AAGXC,MAAAA,OAAO,EAAE,KAAK7B,KAAL,CAAW8B,cAHT;AAIXC,MAAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWgC,UAJP;AAKX1B,MAAAA,WAAW,EAAE,KAAKN,KAAL,CAAWiC,iBALb;AAMXC,MAAAA,SAAS,EAAE,KAAKlC,KAAL,CAAWmC,iBANX;AAQXC,MAAAA,UAAU,EAAE,EARD;AASXX,MAAAA,aAAa,EAAE,KATJ;AAUXY,MAAAA,YAAY,EAAE,KAVH;AAWXC,MAAAA,sBAAsB,EAAE,KAXb;AAYXC,MAAAA,aAAa,EACX,KAAKvC,KAAL,CAAWiC,iBAAX,GAA+B,IAA/B,GAAsC,KAAKjC,KAAL,CAAWwC,eAbxC;AAcXC,MAAAA,eAAe,EAAE,KAAKzC,KAAL,CAAWmC;AAdjB,KAAb;AAiBA,SAAKX,UAAL,GAAkB,KAAKA,UAAL,CAAgBkB,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYD,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKE,MAAL,GAAc,KAAKA,MAAL,CAAYF,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKG,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBH,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKI,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBJ,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKhC,QAAL,GAAgB,KAAKA,QAAL,CAAcgC,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDK,EAAAA,iBAAiB,GAAG;AAClBlD,IAAAA,gBAAgB,GACbe,IADH,CACQC,QAAQ,IAAI;AAChBV,MAAAA,OAAO,CAACC,GAAR,CAAYS,QAAZ;AACA,WAAKO,QAAL,CAAc;AAAEgB,QAAAA,UAAU,EAAEvB;AAAd,OAAd;AACD,KAJH,EAKGI,KALH,CAKSC,KAAK,IAAI;AACdf,MAAAA,OAAO,CAACC,GAAR,CAAYc,KAAZ;AACD,KAPH;AAQD;;AAEDR,EAAAA,QAAQ,GAAG;AACT,QACE,KAAKL,KAAL,CAAWqB,UAAX,KAA0B,EAA1B,IACA,KAAKrB,KAAL,CAAWuB,OAAX,KAAuB,EADvB,IAEA,KAAKvB,KAAL,CAAWwB,OAAX,KAAuB,EAFvB,IAGA,KAAKxB,KAAL,CAAW0B,KAAX,KAAqB,EAHrB,IAIA,KAAK1B,KAAL,CAAWC,WAAX,KAA2B,EAJ3B,IAKA,KAAKD,KAAL,CAAW6B,SAAX,KAAyB,EAN3B,EAOE;AACA,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD;;AA+BDS,EAAAA,MAAM,GAAG;AACP,SAAKvB,QAAL,CAAc;AACZiB,MAAAA,YAAY,EAAE,CAAC,KAAKhC,KAAL,CAAWgC;AADd,KAAd;AAGD;;AAEDQ,EAAAA,gBAAgB,GAAG;AACjB,SAAKzB,QAAL,CAAc;AACZkB,MAAAA,sBAAsB,EAAE,CAAC,KAAKjC,KAAL,CAAWiC;AADxB,KAAd;AAGD;;AAEDM,EAAAA,MAAM,CAACI,KAAD,EAAQ;AACZ,SAAK5B,QAAL,CAAc;AACZiB,MAAAA,YAAY,EAAE,CAAC,KAAKhC,KAAL,CAAWgC,YADd;AAEZE,MAAAA,aAAa,EAAES,KAAK,CAAC3B,MAAN,CAAa4B;AAFhB,KAAd;AAIA,SAAK7B,QAAL,CAAc;AACZd,MAAAA,WAAW,EAAE4C,aAAa,CAACF,KAAK,CAAC3B,MAAN,CAAa4B,SAAd;AADd,KAAd;AAGD;;AAEDH,EAAAA,gBAAgB,CAACE,KAAD,EAAQ;AACtB,SAAK5B,QAAL,CAAc;AACZkB,MAAAA,sBAAsB,EAAE,CAAC,KAAKjC,KAAL,CAAWiC,sBADxB;AAEZG,MAAAA,eAAe,EAAEO,KAAK,CAAC3B,MAAN,CAAa4B;AAFlB,KAAd;AAIA,SAAK7B,QAAL,CAAc;AACZc,MAAAA,SAAS,EAAEiB,eAAe,CAACH,KAAK,CAAC3B,MAAN,CAAa4B,SAAd;AADd,KAAd;AAGD;;AACDG,EAAAA,MAAM,GAAG;AAAA,wBASH,KAAK/C,KATF;AAAA,UAELqB,UAFK,eAELA,UAFK;AAAA,UAGLE,OAHK,eAGLA,OAHK;AAAA,UAILC,OAJK,eAILA,OAJK;AAAA,UAKLE,KALK,eAKLA,KALK;AAAA,UAMLzB,WANK,eAMLA,WANK;AAAA,UAOL4B,SAPK,eAOLA,SAPK;AAAA,UAQLE,UARK,eAQLA,UARK;AAUP,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK/B,KAAL,CAAWoB,aAAX,IACC;AAAM,MAAA,QAAQ,EAAE,KAAKxB,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,YAFP;AAGE,MAAA,KAAK,EAAEyB,UAHT;AAIE,MAAA,QAAQ,EAAE,KAAKP,aAJjB;AAKE,MAAA,KAAK,EAAC,cALR;AAME,MAAA,WAAW,EAAC,gCANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAYE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,KAAK,EAAC,cAHR;AAIE,MAAA,KAAK,EAAEU,OAJT;AAKE,MAAA,QAAQ,EAAE,KAAKV,aALjB;AAME,MAAA,WAAW,EAAC,mDANd;AAOE,MAAA,IAAI,EAAC,GAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAZF,EAyBE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAEY,KAHT;AAIE,MAAA,QAAQ,EAAE,KAAKZ,aAJjB;AAKE,MAAA,KAAK,EAAC,cALR;AAME,MAAA,WAAW,EAAC,iCANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAzBF,EAoCE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,cAAD;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,MAAM,EAAE,KAAKd,KAAL,CAAWgC,YAFrB;AAGE,MAAA,MAAM,EAAE,KAAKM,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiB,KAAKtC,KAAL,CAAWkC,aAA5B,CALF,EAME,oBAAC,YAAD;AACE,MAAA,OAAO,EAAE,KAAKK,MADhB;AAEE,MAAA,QAAQ,EAAE,KAAKzB,aAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGiB,UAAU,CAACiB,GAAX,CAAeC,QAAQ,IAAIC,aAAa,CAACD,QAAD,CAAxC,CAJH,CANF,CAFF,CApCF,EAoDE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,cAAD;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,MAAM,EAAE,KAAKjD,KAAL,CAAWiC,sBAFrB;AAGE,MAAA,MAAM,EAAE,KAAKO,gBAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiB,KAAKxC,KAAL,CAAWoC,eAA5B,CALF,EAME,oBAAC,YAAD;AACE,MAAA,OAAO,EAAE,KAAKK,gBADhB;AAEE,MAAA,QAAQ,EAAE,KAAK3B,aAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,EAKE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALF,CANF,CAFF,CApDF,EAqEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,sCAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CArEF,CAFJ,EA4EE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAC,iCADZ;AAEE,MAAA,OAAO,EAAE,KAAKK,UAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,CA5EF,CADF;AAqFD;;AAjNA;;AAmNH,SAAS0B,aAAT,CAAuBI,QAAvB,EAAiC;AAC/B,SAAOA,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,CAAP;AACD;;AAED,SAASD,aAAT,CAAuBD,QAAvB,EAAiC;AAC/B,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QAAQ,CAAChD,WADZ,QAC2BgD,QAAQ,CAACG,aADpC,CADF;AAKD;;AAED,SAASN,eAAT,CAAyBO,UAAzB,EAA6C;AAC3C,MAAIA,UAAU,CAACC,MAAX,GAAoB,CAAxB,EAA2B,OAAO,IAAP,CAA3B,KACK,OAAOD,UAAP;AACN","sourcesContent":["// @flow\n\nimport React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\nimport \"../styles/Article.css\";\nimport {\n  ButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from \"reactstrap\";\nimport { editNews, getAllCategories } from \"../Service\";\n\nexport default class ArticleEdit extends Component<{\n  articleId?: number,\n  articleTitle?: string,\n  articleIngress?: String,\n  articleContent?: string,\n  articleImg?: string,\n  articleCategory?: string,\n  articleCategoryId?: number,\n  articleImportancy?: number\n}> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      overskrift: this.props.articleTitle,\n      ingress: this.props.ingress,\n      innhold: this.props.articleContent,\n      bilde: this.props.articleImg,\n      kategori_id: this.props.articleCategoryId,\n      viktighet: this.props.articleImportancy,\n\n      categories: [],\n      showInputForm: false,\n      dropdownOpen: false,\n      dropdownOpenImportancy: false,\n      valueCategory:\n        this.props.articleCategoryId + \". \" + this.props.articleCategory,\n      valueImportancy: this.props.articleImportancy\n    };\n\n    this.toggleForm = this.toggleForm.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.select = this.select.bind(this);\n    this.toggleImportancy = this.toggleImportancy.bind(this);\n    this.selectImportancy = this.selectImportancy.bind(this);\n    this.required = this.required.bind(this);\n  }\n\n  componentDidMount() {\n    getAllCategories()\n      .then(response => {\n        console.log(response);\n        this.setState({ categories: response });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  required() {\n    if (\n      this.state.overskrift === \"\" ||\n      this.state.ingress === \"\" ||\n      this.state.innhold === \"\" ||\n      this.state.bilde === \"\" ||\n      this.state.kategori_id === \"\" ||\n      this.state.viktighet === \"\"\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  editHandler = e => {\n    console.log(this.state.kategori_id);\n\n    e.preventDefault();\n    if (window.confirm(\"Er du sikker?\")) {\n      if (this.required()) {\n        editNews(this.props.articleId, this.state)\n          .then(response => {\n            alert(\"Saken er endret\");\n            window.location.hash = \"\";\n          })\n          .catch(error => {\n            console.log(error);\n          });\n      } else alert(\"Vennligst fyll inn alle feltene\");\n    }\n  };\n\n  changeHandler = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  toggleForm = () => {\n    const { showInputForm } = this.state.showInputForm;\n    this.setState({\n      showInputForm: !this.state.showInputForm\n    });\n  };\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n\n  toggleImportancy() {\n    this.setState({\n      dropdownOpenImportancy: !this.state.dropdownOpenImportancy\n    });\n  }\n\n  select(event) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n      valueCategory: event.target.innerText\n    });\n    this.setState({\n      kategori_id: checkCategory(event.target.innerText)\n    });\n  }\n\n  selectImportancy(event) {\n    this.setState({\n      dropdownOpenImportancy: !this.state.dropdownOpenImportancy,\n      valueImportancy: event.target.innerText\n    });\n    this.setState({\n      viktighet: checkImportancy(event.target.innerText)\n    });\n  }\n  render() {\n    const {\n      overskrift,\n      ingress,\n      innhold,\n      bilde,\n      kategori_id,\n      viktighet,\n      categories\n    } = this.state;\n    return (\n      <div className=\"my-3\">\n        {this.state.showInputForm && (\n          <form onSubmit={this.editHandler}>\n            <div class=\"form-group\">\n              <label>Tittel:</label>\n              <input\n                type=\"text\"\n                name=\"overskrift\"\n                value={overskrift}\n                onChange={this.changeHandler}\n                class=\"form-control\"\n                placeholder=\"Skriv inn tittelen til din sak\"\n              ></input>\n            </div>\n            <div class=\"form-group\">\n              \n              <label>Beskrivelse:</label>\n              <textarea\n                type=\"text\"\n                name=\"innhold\"\n                class=\"form-control\"\n                value={innhold}\n                onChange={this.changeHandler}\n                placeholder=\"Skriv inn det innholdet du ønsker vist i saken\"\n                rows=\"5\"\n              ></textarea>\n            </div>\n            <div class=\"form-group\">\n              <label>Bilde-URL:</label>\n              <input\n                type=\"text\"\n                name=\"bilde\"\n                value={bilde}\n                onChange={this.changeHandler}\n                class=\"form-control\"\n                placeholder=\"Skriv inn bilde-URL til din sak\"\n              ></input>\n            </div>\n            <div class=\"form-group\">\n              <label>Kategori:</label>\n              <ButtonDropdown\n                className=\"ml-3\"\n                isOpen={this.state.dropdownOpen}\n                toggle={this.toggle}\n              >\n                <DropdownToggle>{this.state.valueCategory}</DropdownToggle>\n                <DropdownMenu\n                  onClick={this.select}\n                  onChange={this.changeHandler}\n                >\n                  {categories.map(category => getCategories(category))}\n                </DropdownMenu>\n              </ButtonDropdown>\n            </div>\n            <div class=\"form-group\">\n              <label>Viktighet:</label>\n              <ButtonDropdown\n                className=\"ml-3\"\n                isOpen={this.state.dropdownOpenImportancy}\n                toggle={this.toggleImportancy}\n              >\n                <DropdownToggle>{this.state.valueImportancy}</DropdownToggle>\n                <DropdownMenu\n                  onClick={this.selectImportancy}\n                  onChange={this.changeHandler}\n                >\n                  <DropdownItem>1</DropdownItem>\n                  <DropdownItem>2</DropdownItem>\n                </DropdownMenu>\n              </ButtonDropdown>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary fa fa-save fa-custom\">\n              <a className=\"fa-custom\"> LAGRE</a>\n            </button>\n          </form>\n        )}\n        <Button\n          className=\"bg-warning fa fa-edit fa-custom\"\n          onClick={this.toggleForm}\n        >\n          <a className=\"fa-custom\"> ENDRE SAK</a>\n        </Button>\n      </div>\n    );\n  }\n}\nfunction checkCategory(category) {\n  return category.substring(0, 1);\n}\n\nfunction getCategories(category) {\n  return (\n    <DropdownItem>\n      {category.kategori_id}. {category.kategori_navn}\n    </DropdownItem>\n  );\n}\n\nfunction checkImportancy(importancy: string) {\n  if (importancy.length > 1) return null;\n  else return importancy;\n}\n"]},"metadata":{},"sourceType":"module"}